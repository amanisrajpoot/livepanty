version: '3.8'

services:
  # Redis for signaling server state management
  redis:
    image: redis:7-alpine
    container_name: livepanty-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    networks:
      - livepanty-network

  # PostgreSQL database
  postgres:
    image: postgres:15-alpine
    container_name: livepanty-postgres
    environment:
      POSTGRES_DB: livepanty
      POSTGRES_USER: livepanty
      POSTGRES_PASSWORD: livepanty123
      POSTGRES_HOST_AUTH_METHOD: trust
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/schema.sql:/docker-entrypoint-initdb.d/schema.sql
    networks:
      - livepanty-network

  # TURN server for NAT traversal
  coturn:
    image: coturn/coturn:latest
    container_name: livepanty-turn
    environment:
      - TURN_USERNAME=livepanty
      - TURN_PASSWORD=livepanty123
      - TURN_REALM=livepanty.com
      - TURN_NO_TCP_RELAY=false
      - TURN_NO_TLS_RELAY=false
      - TURN_NO_DTLS_RELAY=false
    ports:
      - "3478:3478"
      - "3478:3478/udp"
      - "49152-65535:49152-65535/udp"
    volumes:
      - ./turnserver.conf:/etc/coturn/turnserver.conf
    networks:
      - livepanty-network
    command: >
      --listening-port=3478
      --tls-listening-port=5349
      --listening-ip=0.0.0.0
      --external-ip=$$(detect-external-ip)
      --realm=livepanty.com
      --server-name=livepanty.com
      --lt-cred-mech
      --user=livepanty:livepanty123
      --no-tlsv1
      --no-tlsv1_1
      --no-tlsv1_2
      --cert=/etc/coturn/cert.pem
      --pkey=/etc/coturn/key.pem
      --log-file=stdout
      --verbose
      --fingerprint
      --no-multicast-peers
      --no-cli
      --no-tlsv1_3

  # STUN server
  stun:
    image: pion/stun-server:latest
    container_name: livepanty-stun
    ports:
      - "3478:3478/udp"
    networks:
      - livepanty-network

  # Nginx reverse proxy
  nginx:
    image: nginx:alpine
    container_name: livepanty-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - signaling-server
      - sfu-server
    networks:
      - livepanty-network

  # Signaling server
  signaling-server:
    build:
      context: ./signaling-server
      dockerfile: Dockerfile
    container_name: livepanty-signaling
    environment:
      - NODE_ENV=development
      - REDIS_URL=redis://redis:6379
      - DATABASE_URL=postgresql://livepanty:livepanty123@postgres:5432/livepanty
      - JWT_SECRET=your-jwt-secret-here
      - TURN_SERVERS=turn:livepanty:livepanty123@coturn:3478
    ports:
      - "3001:3001"
    volumes:
      - ./signaling-server:/app
      - /app/node_modules
    depends_on:
      - redis
      - postgres
    networks:
      - livepanty-network
    command: npm run dev

  # SFU server (mediasoup)
  sfu-server:
    build:
      context: ./sfu-server
      dockerfile: Dockerfile
    container_name: livepanty-sfu
    environment:
      - NODE_ENV=development
      - REDIS_URL=redis://redis:6379
      - TURN_SERVERS=turn:livepanty:livepanty123@coturn:3478
      - MEDIASOUP_MIN_PORT=40000
      - MEDIASOUP_MAX_PORT=49999
    ports:
      - "3002:3002"
      - "40000-49999:40000-49999/udp"
    volumes:
      - ./sfu-server:/app
      - /app/node_modules
    depends_on:
      - redis
      - coturn
    networks:
      - livepanty-network
    command: npm run dev

  # Web client (React)
  web-client:
    build:
      context: ./web-client
      dockerfile: Dockerfile
    container_name: livepanty-web
    environment:
      - REACT_APP_SIGNALING_URL=http://localhost:3001
      - REACT_APP_SFU_URL=http://localhost:3002
      - REACT_APP_API_URL=http://localhost:3001
    ports:
      - "3000:3000"
    volumes:
      - ./web-client:/app
      - /app/node_modules
    depends_on:
      - signaling-server
      - sfu-server
    networks:
      - livepanty-network
    command: npm start

volumes:
  redis_data:
  postgres_data:

networks:
  livepanty-network:
    driver: bridge
